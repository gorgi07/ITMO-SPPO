# ---------------------------------- №2 (Вариант 0) ----------------------------------
# Хайку – жанр традиционной японской лирической поэзии века, известный с XIV века.
# Оригинальное японское хайку состоит из 17 слогов, составляющих один столбец
# иероглифов. Особыми разделительными словами – кирэдзи – текст хайку делится на
# части из 5, 7 и снова 5 слогов. При переводе хайку на западные языки традиционно
# вместо разделительного слова использую разрыв строки и, таким образом, хайку
# записываются как трёхстишия.
# Перед вами трёхстишия, которые претендуют на то, чтобы быть хайку. В качестве
# разделителя строк используются символы «/». Если разделители делят текст на
# строки, в которых 5/7/5 слогов, то выведите «Хайку!». Если число строк не равно 3,
# то выведите строку «Не хайку. Должно быть 3 строки.». Иначе выведите строку вида
# «Не хайку.»
# Для простоты будем считать, что слогов ровно столько же, сколько гласных, не
# задумываясь о тонкостях.
# ------------------------------------------------------------------------------------

import re


def check_haiku(text: str) -> str:
    """
    Функция для проверки строки на "Хайку!"
    """
    try:
        if len(re.findall(r"/", text)) == 2:
            pattern = (
                r'^(?:(?:[^аеёиоуэюяы]*[аеёиоуэюяы][^аеёиоуэюяы]*){5}\/'
                r'(?:[^аеёиоуэюяы]*[аеёиоуэюяы][^аеёиоуэюяы]*){7}\/'
                r'(?:[^аеёиоуэюяы]*[аеёиоуэюяы][^аеёиоуэюяы]*){5})$'
            )

            if re.match(pattern, text, flags=re.IGNORECASE):
                return "Хайку!"
            return "Не хайку."
        return "Не хайку. Должно быть 3 строки."
    except TypeError:
        return "Ошибка! Функция принимает только данные типы str"
    except Exception:
        return "Неизвестная ошибка! Попробуйте заново"


def testing() -> None:
    tests = {"Вечер за окном. / Еще один день прожит. / Жизнь скоротечна...": "Хайку!",
             "Просто текст": "Не хайку. Должно быть 3 строки.",
             "Как вишня расцвела! / Она с коня согнала / И князя-гордеца.": "Не хайку.",
             "Волнуясь, дарю / Новые хайку друзьям - / Новым и старым.": "Хайку!",
             "Запах полыни / Ветер донёс и горечь / Из сердца ушла.": "Хайку!",
             "Текст / Еще текст / Снова текст": "Не хайку."}

    print("=" * 38 + " №2 " + "=" * 38)
    for test in tests:
        print(f"Тест: {test}\nРезультат программы: {check_haiku(test)}\nПравильный ответ: {tests[test]}")
        print("-" * 80)


if __name__ == '__main__':
    testing()
