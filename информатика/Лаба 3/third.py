# --------------------------------- №3 (Вариант 6) ---------------------------------
# Вам необходимо поменять падежи в тексте у прилагательных, которые встречаются
# несколько раз. На вход подаётся текст и порядковый номер слова, падежная форма
# которого будет использована для замены.
# ----------------------------------------------------------------------------------

import re


def text_editing(text: str, number: int) -> str:
    try:
        adjective_endings = ['ая', 'их', 'ом', 'юю', 'ыми', 'ого', 'ые', 'ему', 'ым', 'ых', 'ее', 'ий',
                             'ими', 'ем', 'им', 'ей', 'его', 'ой', 'ому', 'ую', 'ый', 'ие', 'яя', 'ое']
        adjective_set = {}

        for word in re.split(r"[.)(;,:\s«»–]", text):
            # if word != "" and not (word.isdigit())
            if word != "" and not (re.match(r"\b\d+?\b", word)):
                for ending in adjective_endings:
                    if re.match(rf"\b(.)+{ending}\b", word):
                        adjective = word[:len(word) - len(ending)].lower()
                        if adjective in adjective_set:
                            adjective_set[adjective].append(word.lower())
                        else:
                            adjective_set[adjective] = [word.lower()]
                        break

        for key in adjective_set.keys():
            if len(adjective_set[key]) >= max(number, 2):
                last_adjective_1 = key
                last_adjective_2 = key.title()
                new_adjective_1 = adjective_set[key][number - 1]
                new_adjective_2 = adjective_set[key][number - 1].title()
                text = re.sub(r"\b" + f"{last_adjective_2}" + r"(.){2,3}?\b", new_adjective_2, text)
                text = re.sub(r"\b" + f"{last_adjective_1}" + r"(.){2,3}?\b", new_adjective_1, text)
                return text
        else:
            return f"Ошибка!!! Не найдено прилагательное, которое встречается в тексте хотя бы {max(number, 2)} раз(а)."
    except TypeError:
        return "Ошибка! Функция принимает только данные типы (str, int)"
    except Exception:
        return "Неизвестная ошибка! Попробуйте заново"


def testing() -> None:
    t1 = ("Футбольный клуб «Реал Мадрид» является 15-кратным обладателем главного футбольного европейского трофея – "
          "Лиги Чемпионов. Данный турнир организован Союзом европейских футбольных ассоциаций (УЕФА). "
          "Идея о континентальном футбольном турнире пришла к журналисту Габриэлю Ано в 1955 году.", 2)

    t2 = ("Весёлый лисёнок радостно прыгал по полянке, играя с опавшими листьями. "
          "Даже когда наступил вечер, он оставался таким же весёлым, как утром. "
          "Никто в лесу не знал лисёнка более весёлого и жизнерадостного, чем он!", 3)

    t3 = ("Умный пришелец прилетел на Землю, чтобы изучить человеческую культуру. Его умные глаза внимательно "
          "рассматривали каждую деталь, а умные решения помогали избегать ненужного внимания. В отличие от других "
          "существ, этот умный гость быстро освоил несколько языков и подружился с местными учёными. Все признавали, "
          "что таких умных пришельцев на Земле ещё не встречали.", 1)

    t4 = ("Смелый зайчонок решился впервые пересечь широкий ручей, хотя вода казалась ему глубокой и быстрой. "
          "Его смелые шаги удивили даже старого ежа, который наблюдал за ним из кустов. "
          "Все в лесу стали говорить, что таких смелых зайчат еще не видели.", 2)

    t5 = ("На вершине холма открылся интересный пейзаж: бескрайние поля сменялись густыми лесами, а вдали сверкало "
          "озеро. Каждый уголок этого пейзажа манил своим очарованием и скрывал что-то новое для исследования.", 1)

    t6 = ("Цивилизация мирных осьминогов процветала на дне океана, где каждый обитатель жил в гармонии с окружающим "
          "миром. Их мирные собрания проходили под коралловыми сводами, где осьминоги обсуждали важные дела "
          "сообщества. Даже при встрече с чужаками они оставались такими же мирными и дружелюбными, стремясь "
          "наладить контакт без конфликта.", 4)

    tests = [t1, t2, t3, t4, t5, t6]

    print("=" * 50 + " №3 " + "=" * 350)
    for test in tests:
        print(f"Номер прилагательного для определения падежа (и числа): "
              f"{test[1]}\nТест (1) / Результат программы (2):\n1) {test[0]}\n2) {text_editing(test[0], test[1])}")
        print("-" * 404)


if __name__ == '__main__':
    testing()
